name: PHPUnit

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  phpunit:
    runs-on: ubuntu-latest
    container: php:8.3-cli
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_planetart
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    env:
      MYSQL_DATABASE_DEFAULT_US: test_planetart
      MYSQL_LOGIN_ID: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE_SERVER_DOCKER_DEV: mysql
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y default-mysql-client tar zip unzip libyaml-dev librdkafka-dev libssl-dev libcurl4-openssl-dev zlib1g-dev libbrotli-dev libxml2-dev

    - name: Get PHP Info
      id: php-info
      run: |
        echo "php-version=$(php -r 'echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;')" >> $GITHUB_OUTPUT
        echo "php-extension-dir=$(php-config  --extension-dir)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v4
      id: cache-extensions
      with:
        key: ${{ runner.os }}-v4-${{ steps.php-info.outputs.php-version }}-php-yaml-pdo-mysqli-pcntl-calendar-uopz-rdkafka-redis-shmop-sockets-soap-sysvmsg-sysvsem-sysvshm
        path: |
          /usr/local/etc/php/conf.d/docker-php-ext*.ini
          ${{ steps.php-info.outputs.php-extension-dir }}/*.so

    - name: Install PHP extensions
      if: steps.cache-extensions.outputs.cache-hit != 'true'
      run: |
        pecl install yaml uopz rdkafka redis
        docker-php-ext-enable yaml uopz rdkafka redis
        docker-php-ext-install pdo pdo_mysql mysqli pcntl calendar shmop sockets soap sysvmsg sysvsem sysvshm
    
    - name: Wait for MySQL
      run: |
        while ! mysqladmin ping -h mysql -u root -proot --silent; do
          echo 'Waiting for MySQL...'
          sleep 1
        done
    
    - name: Create test database
      run: |
        mysql -h mysql -u root -proot -e "CREATE DATABASE IF NOT EXISTS test_planetart;"
        mysql -h mysql -u root -proot -e "GRANT ALL PRIVILEGES ON test_planetart.* TO 'root'@'%';"
        mysql -h mysql -u root -proot -e "FLUSH PRIVILEGES;"
    
    - name: Install dependencies
      run: |
        curl -sS https://getcomposer.org/download/2.8.9/composer.phar > composer.phar
        chmod +x composer.phar
        ./composer.phar install
    
    - name: Prepare test environment
      run: |
        echo "MYSQL_LOGIN_ID=root" > .env.phpunit
        echo "MYSQL_PASSWORD=root" >> .env.phpunit
        echo "MYSQL_DATABASE_DEFAULT_US=test_planetart" >> .env.phpunit

    - name: Run tests
      run: ls -al && php -m && mysql -h mysql -u root -proot -e "show processlist;"